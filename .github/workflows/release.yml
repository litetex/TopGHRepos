name: Release

on:
  push:
    branches: [ master ]

jobs:
  init_release:
    runs-on: ubuntu-latest
    outputs:
       upload_url: ${{ steps.create_draft.outputs.upload_url }}
       version: ${{ steps.create_version.outputs.version }}
    
    steps:
    - uses: actions/checkout@v3
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.x
      
    - name: Install dependencies
      run: dotnet restore
      working-directory: src
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      working-directory: src
      
    - name: Release - Create Draft for Release
      id: create_draft
      uses: release-drafter/release-drafter@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate version - Cut away the first letter (v)
      id: create_version
      run: |
        tag_name=${{ steps.create_draft.outputs.tag_name }}
        echo "version=$(echo ${tag_name:1})" >> $GITHUB_OUTPUT
        
  build_exec:
    runs-on: ubuntu-latest
    needs: [init_release]
    strategy:
      matrix:
        os: [win-x64, linux-x64, osx-x64]
        configuration: [Release]
        project: [TopGHRepos.CMD]
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.x
        
    - name: Publish ${{ matrix.os }} ${{ matrix.configuration }} - dotnet publish 
      working-directory: src/${{ matrix.project }}
      # New in NET5: PublishSingleFile procudces more than one file... 
      # (IncludeNativeLibrariesForSelfExtract fixes that, https://github.com/dotnet/runtime/issues/36590#issuecomment-699257013)
      run: dotnet publish -c ${{ matrix.configuration }} -r ${{ matrix.os }} --self-contained -p:PublishSingleFile=true -p:DebugType=None -p:IncludeNativeLibrariesForSelfExtract=true -p:Version=${{ needs.init_release.outputs.version }}

    - name: Pack ${{ matrix.os }} - Zip
      working-directory: src/${{ matrix.project }}/bin/${{ matrix.configuration }}/net6.0/${{ matrix.os }}/publish/
      run: zip -r ${{ matrix.project }}.zip .

    - name: Release ${{ matrix.os }} - Upload Release Asset
      uses: shogo82148/actions-upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.init_release.outputs.upload_url }} 
        asset_path: ./src/${{ matrix.project }}/bin/${{ matrix.configuration }}/net6.0/${{ matrix.os }}/publish/${{ matrix.project }}.zip
        asset_name: ${{ matrix.project }}-${{ matrix.os }}.zip
        asset_content_type: application/zip

  build_nuget:
    runs-on: ubuntu-latest
    needs: [init_release]
    strategy:
      fail-fast: true
      matrix:
        project: 
        - "TopGHRepos.Data"
        - "TopGHRepos.Models"

    steps:
    - uses: actions/checkout@v3
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.x
      
    - name: Pack
      working-directory: src/${{ matrix.project }}
      run: |
        dotnet pack --configuration Release -p:PackageVersion=${{ needs.init_release.outputs.version }} -p:AssemblyVersion=${{ needs.init_release.outputs.version }} -p:PathMap="$GITHUB_WORKSPACE=/" -p:ContinuousIntegrationBuild=true
            
    - name: Find nupkg file
      id: nupkgvar
      working-directory: src/${{ matrix.project }}/bin/Release
      run: files=( *.nupkg) && echo "filename=${files[0]}" >> $GITHUB_OUTPUT
      
    - name: Upload nupkg - Upload asset
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.nupkgvar.outputs.filename }}
        path: src/${{ matrix.project }}/bin/Release/${{ steps.nupkgvar.outputs.filename }}
        if-no-files-found: error

    - name: Upload nupkg - Upload release asset
      uses: shogo82148/actions-upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.init_release.outputs.upload_url }} 
        asset_path: ./src/${{ matrix.project }}/bin/Release/${{ steps.nupkgvar.outputs.filename }}
        asset_name: ${{ steps.nupkgvar.outputs.filename }}
        asset_content_type: application/octet-stream

    - name: Find snupkg file
      id: snupkgvar
      working-directory: src/${{ matrix.project }}/bin/Release
      run: files=( *.snupkg) && echo "filename=${files[0]}" >> $GITHUB_OUTPUT
      
    - name: Upload snupkg - Upload asset
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.snupkgvar.outputs.filename }}
        path: src/${{ matrix.project }}/bin/Release/${{ steps.snupkgvar.outputs.filename }}
        if-no-files-found: error

    - name: Upload snupkg - Upload release asset
      uses: shogo82148/actions-upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.init_release.outputs.upload_url }} 
        asset_path: ./src/${{ matrix.project }}/bin/Release/${{ steps.snupkgvar.outputs.filename }}
        asset_name: ${{ steps.snupkgvar.outputs.filename }}
        asset_content_type: application/octet-stream

    - name: Release - Upload nupkg (includes snupkg) to nuget.org
      working-directory: src/${{ matrix.project }}/bin/Release
      run: dotnet nuget push ${{ steps.nupkgvar.outputs.filename }} -k ${{ secrets.NUGET_KEY }} -s https://api.nuget.org/v3/index.json
